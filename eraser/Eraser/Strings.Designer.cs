//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eraser {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Eraser.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, .
        /// </summary>
        internal static string _0___ {
            get {
                return ResourceManager.GetString("{0}, ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Built: {1:F}).
        /// </summary>
        internal static string _0___Built___1_F__ {
            get {
                return ResourceManager.GetString("{0} (Built: {1:F})", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Built: {1:F}, special build).
        /// </summary>
        internal static string _0___Built___1_F___special_build_ {
            get {
                return ResourceManager.GetString("{0} (Built: {1:F}, special build)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has just been added to the list of tasks..
        /// </summary>
        internal static string _0__has_just_been_added_to_the_list_of_tasks_ {
            get {
                return ResourceManager.GetString("{0} has just been added to the list of tasks.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} of {1} downloaded.
        /// </summary>
        internal static string _0__of__1__downloaded {
            get {
                return ResourceManager.GetString("{0} of {1} downloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} out of {1}.
        /// </summary>
        internal static string _0__out_of__1_ {
            get {
                return ResourceManager.GetString("{0} out of {1}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (default).
        /// </summary>
        internal static string _default_ {
            get {
                return ResourceManager.GetString("(default)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (This erasure type does not have any settings to define.).
        /// </summary>
        internal static string _This_erasure_type_does_not_have_any_settings_to_define__ {
            get {
                return ResourceManager.GetString("(This erasure type does not have any settings to define.)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About {0} left.
        /// </summary>
        internal static string About__0__left {
            get {
                return ResourceManager.GetString("About {0} left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add {0}.
        /// </summary>
        internal static string Add__0_ {
            get {
                return ResourceManager.GetString("Add {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous argument: {0} can be handled by more than one erasure target..
        /// </summary>
        internal static string Ambiguous_argument___0__can_be_handled_by_more_than_one_erasure_target_ {
            get {
                return ResourceManager.GetString("Ambiguous argument: {0} can be handled by more than one erasure target.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous erasure method name: {0} identifies more than one erasure method..
        /// </summary>
        internal static string Ambiguous_erasure_method_name___0__identifies_more_than_one_erasure_method_ {
            get {
                return ResourceManager.GetString("Ambiguous erasure method name: {0} identifies more than one erasure method.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid drive erasure method was selected..
        /// </summary>
        internal static string An_invalid_drive_erasure_method_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid drive erasure method was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid file erasure method was selected..
        /// </summary>
        internal static string An_invalid_file_erasure_method_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid file erasure method was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid language was selected..
        /// </summary>
        internal static string An_invalid_language_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid language was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid randomness data source was selected..
        /// </summary>
        internal static string An_invalid_randomness_data_source_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid randomness data source was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another instance of Eraser is already running but cannot be connected to.\n\nThe error returned was: {0}.
        /// </summary>
        internal static string Another_instance_of_Eraser_is_already_running_but_cannot_be_connected_to__n_nThe_error_returned_was___0_ {
            get {
                return ResourceManager.GetString("Another instance of Eraser is already running but cannot be connected to.\\n\\nThe " +
                        "error returned was: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another instance of Eraser is already running but it is running with higher privileges than this instance of Eraser.\n\nEraser will now exit..
        /// </summary>
        internal static string Another_instance_of_Eraser_is_already_running_but_it_is_running_with_higher_privileges_than_this_instance_of_Eraser__n_nEraser_will_now_exit_ {
            get {
                return ResourceManager.GetString("Another instance of Eraser is already running but it is running with higher privi" +
                        "leges than this instance of Eraser.\\n\\nEraser will now exit.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another instance of Eraser is already running but it is running with higher privileges than this instance of Eraser. Tasks cannot be added in this manner.\n\nClose the running instance of Eraser and start it again without administrator privileges, or run the command again as an administrator..
        /// </summary>
        internal static string Another_instance_of_Eraser_is_already_running_but_it_is_running_with_higher_privileges_than_this_instance_of_Eraser__Tasks_cannot_be_added_in_this_manner__n_nClose_the_running_instance_of_Eraser_and_start_it_again_without_administrator_privileges__or_run_the_command_again_as_an_administrator_ {
            get {
                return ResourceManager.GetString(@"Another instance of Eraser is already running but it is running with higher privileges than this instance of Eraser. Tasks cannot be added in this manner.\n\nClose the running instance of Eraser and start it again without administrator privileges, or run the command again as an administrator.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the selected tasks?.
        /// </summary>
        internal static string Are_you_sure_you_want_to_delete_the_selected_tasks_ {
            get {
                return ResourceManager.GetString("Are you sure you want to delete the selected tasks?", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you wish to erase the selected items?.
        /// </summary>
        internal static string Are_you_sure_you_wish_to_erase_the_selected_items_ {
            get {
                return ResourceManager.GetString("Are you sure you wish to erase the selected items?", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel the drag-and-drop operation.
        /// </summary>
        internal static string Cancel_the_drag_and_drop_operation {
            get {
                return ResourceManager.GetString("Cancel the drag-and-drop operation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add the selected items.
        /// </summary>
        internal static string Cannot_add_the_selected_items {
            get {
                return ResourceManager.GetString("Cannot add the selected items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot erase the selected items.
        /// </summary>
        internal static string Cannot_erase_the_selected_items {
            get {
                return ResourceManager.GetString("Cannot erase the selected items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        internal static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed with errors.
        /// </summary>
        internal static string Completed_with_errors {
            get {
                return ResourceManager.GetString("Completed with errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed with warnings.
        /// </summary>
        internal static string Completed_with_warnings {
            get {
                return ResourceManager.GetString("Completed with warnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not import task list from {0}. The error returned was: {1}.
        /// </summary>
        internal static string Could_not_import_task_list_from__0___The_error_returned_was___1_ {
            get {
                return ResourceManager.GetString("Could not import task list from {0}. The error returned was: {1}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load task list. All task entries have been lost. The error returned was: {0}.
        /// </summary>
        internal static string Could_not_load_task_list__All_task_entries_have_been_lost__The_error_returned_was___0_ {
            get {
                return ResourceManager.GetString("Could not load task list. All task entries have been lost. The error returned was" +
                        ": {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load the setting {0}\\{1}. The setting has been lost..
        /// </summary>
        internal static string Could_not_load_the_setting__0____1___The_setting_has_been_lost_ {
            get {
                return ResourceManager.GetString("Could not load the setting {0}\\\\{1}. The setting has been lost.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open the required web page. The error returned was: {0}.
        /// </summary>
        internal static string Could_not_open_the_required_web_page__The_error_returned_was___0_ {
            get {
                return ResourceManager.GetString("Could not open the required web page. The error returned was: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new Task\nA task will be created containing the selected items..
        /// </summary>
        internal static string Create_a_new_Task_nA_task_will_be_created_containing_the_selected_items_ {
            get {
                return ResourceManager.GetString("Create a new Task\\nA task will be created containing the selected items.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default drive erasure method.
        /// </summary>
        internal static string Default_drive_erasure_method {
            get {
                return ResourceManager.GetString("Default drive erasure method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default file erasure method.
        /// </summary>
        internal static string Default_file_erasure_method {
            get {
                return ResourceManager.GetString("Default file erasure method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded.
        /// </summary>
        internal static string Downloaded {
            get {
                return ResourceManager.GetString("Downloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading: {0}.
        /// </summary>
        internal static string Downloading___0_ {
            get {
                return ResourceManager.GetString("Downloading: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erase {0}.
        /// </summary>
        internal static string Erase__0_ {
            get {
                return ResourceManager.GetString("Erase {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erase the selected items\nSchedules the selected items for immediate erasure..
        /// </summary>
        internal static string Erase_the_selected_items_nSchedules_the_selected_items_for_immediate_erasure_ {
            get {
                return ResourceManager.GetString("Erase the selected items\\nSchedules the selected items for immediate erasure.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eraser.
        /// </summary>
        internal static string Eraser {
            get {
                return ResourceManager.GetString("Eraser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eraser {0}\r\n(c) 2008-2015 The Eraser Project\r\nEraser is Open-Source Software: see http://eraser.heidi.ie/ for details.\r\n.
        /// </summary>
        internal static string Eraser__0__r_n_c__2008_2014_The_Eraser_Project_r_nEraser_is_Open_Source_Software__see_http___eraser_heidi_ie__for_details__r_n {
            get {
                return ResourceManager.GetString("Eraser {0}\\r\\n(c) 2008-2015 The Eraser Project\\r\\nEraser is Open-Source Software:" +
                        " see http://eraser.heidi.ie/ for details.\\r\\n", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eraser cannot connect to the running instance for erasures..
        /// </summary>
        internal static string Eraser_cannot_connect_to_the_running_instance_for_erasures_ {
            get {
                return ResourceManager.GetString("Eraser cannot connect to the running instance for erasures.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eraser is free open-source software!.
        /// </summary>
        internal static string Eraser_is_free_open_source_software_ {
            get {
                return ResourceManager.GetString("Eraser is free open-source software!", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erasing....
        /// </summary>
        internal static string Erasing___ {
            get {
                return ResourceManager.GetString("Erasing...", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erasures with plausible deniability was selected, but no files were selected to be used as decoys..
        /// </summary>
        internal static string Erasures_with_plausible_deniability_was_selected__but_no_files_were_selected_to_be_used_as_decoys_ {
            get {
                return ResourceManager.GetString("Erasures with plausible deniability was selected, but no files were selected to b" +
                        "e used as decoys.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}.
        /// </summary>
        internal static string Error___0_ {
            get {
                return ResourceManager.GetString("Error: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import tasks from {0}.
        /// </summary>
        internal static string Import_tasks_from__0_ {
            get {
                return ResourceManager.GetString("Import tasks from {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation cancelled.
        /// </summary>
        internal static string Installation_cancelled {
            get {
                return ResourceManager.GetString("Installation cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation failed with exit code {0}.
        /// </summary>
        internal static string Installation_failed_with_exit_code__0_ {
            get {
                return ResourceManager.GetString("Installation failed with exit code {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed {0}.
        /// </summary>
        internal static string Installed__0_ {
            get {
                return ResourceManager.GetString("Installed {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {0}.
        /// </summary>
        internal static string Installing__0_ {
            get {
                return ResourceManager.GetString("Installing {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New task added.
        /// </summary>
        internal static string New_task_added {
            get {
                return ResourceManager.GetString("New task added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nightly builds.
        /// </summary>
        internal static string Nightly_builds {
            get {
                return ResourceManager.GetString("Nightly builds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not completed.
        /// </summary>
        internal static string Not_completed {
            get {
                return ResourceManager.GetString("Not completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not queued.
        /// </summary>
        internal static string Not_queued {
            get {
                return ResourceManager.GetString("Not queued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overall progress: {0} left.
        /// </summary>
        internal static string Overall_progress___0__left {
            get {
                return ResourceManager.GetString("Overall progress: {0} left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please help us to continue developing Eraser - donate some coffee!.
        /// </summary>
        internal static string Please_help_us_to_continue_developing_Eraser___donate_some_coffee_ {
            get {
                return ResourceManager.GetString("Please help us to continue developing Eraser - donate some coffee!", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins.
        /// </summary>
        internal static string Plugins {
            get {
                return ResourceManager.GetString("Plugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins which have just been approved will only be loaded the next time Eraser is started..
        /// </summary>
        internal static string Plugins_which_have_just_been_approved_will_only_be_loaded_the_next_time_Eraser_is_started_ {
            get {
                return ResourceManager.GetString("Plugins which have just been approved will only be loaded the next time Eraser is" +
                        " started.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing:.
        /// </summary>
        internal static string Processing_ {
            get {
                return ResourceManager.GetString("Processing:", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing update list....
        /// </summary>
        internal static string Processing_update_list___ {
            get {
                return ResourceManager.GetString("Processing update list...", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queued for execution.
        /// </summary>
        internal static string Queued_for_execution {
            get {
                return ResourceManager.GetString("Queued for execution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomness data source.
        /// </summary>
        internal static string Randomness_data_source {
            get {
                return ResourceManager.GetString("Randomness data source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recycle Bin.
        /// </summary>
        internal static string Recycle_Bin {
            get {
                return ResourceManager.GetString("Recycle Bin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running....
        /// </summary>
        internal static string Running___ {
            get {
                return ResourceManager.GetString("Running...", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session: {0:F}.
        /// </summary>
        internal static string Session___0_F_ {
            get {
                return ResourceManager.GetString("Session: {0:F}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task completed.
        /// </summary>
        internal static string Task_completed {
            get {
                return ResourceManager.GetString("Task completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tasks must contain at least one erasure target..
        /// </summary>
        internal static string Tasks_must_contain_at_least_one_erasure_target_ {
            get {
                return ResourceManager.GetString("Tasks must contain at least one erasure target.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Eraser documentation file could not be opened. Check that Adobe Reader installed and that your Eraser install is not corrupt.\n\nThe error returned was: {0}.
        /// </summary>
        internal static string The_Eraser_documentation_file_could_not_be_opened__Check_that_Adobe_Reader_installed_and_that_your_Eraser_install_is_not_corrupt__n_nThe_error_returned_was___0_ {
            get {
                return ResourceManager.GetString("The Eraser documentation file could not be opened. Check that Adobe Reader instal" +
                        "led and that your Eraser install is not corrupt.\\n\\nThe error returned was: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The erasure method selected does not support erasing the erasure target..
        /// </summary>
        internal static string The_erasure_method_selected_does_not_support_erasing_the_erasure_target_ {
            get {
                return ResourceManager.GetString("The erasure method selected does not support erasing the erasure target.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following settings held invalid values:\n\n{0}\nThese settings have now been set to naive defaults.\n\nPlease check that the new settings suit your required level of security..
        /// </summary>
        internal static string The_following_settings_held_invalid_values__n_n_0__nThese_settings_have_now_been_set_to_naive_defaults__n_nPlease_check_that_the_new_settings_suit_your_required_level_of_security_ {
            get {
                return ResourceManager.GetString("The following settings held invalid values:\\n\\n{0}\\nThese settings have now been " +
                        "set to naive defaults.\\n\\nPlease check that the new settings suit your required " +
                        "level of security.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new randomness data source will only be used when the next task is run.\nCurrently running tasks will use the old source..
        /// </summary>
        internal static string The_new_randomness_data_source_will_only_be_used_when_the_next_task_is_run__nCurrently_running_tasks_will_use_the_old_source_ {
            get {
                return ResourceManager.GetString("The new randomness data source will only be used when the next task is run.\\nCurr" +
                        "ently running tasks will use the old source.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new UI language will take only effect when Eraser is restarted..
        /// </summary>
        internal static string The_new_UI_language_will_take_only_effect_when_Eraser_is_restarted_ {
            get {
                return ResourceManager.GetString("The new UI language will take only effect when Eraser is restarted.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path you selected is invalid..
        /// </summary>
        internal static string The_path_you_selected_is_invalid_ {
            get {
                return ResourceManager.GetString("The path you selected is invalid.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided Erasure Method &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string The_provided_Erasure_Method___0___does_not_exist_ {
            get {
                return ResourceManager.GetString("The provided Erasure Method \'{0}\' does not exist.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task {0} did not complete..
        /// </summary>
        internal static string The_task__0__did_not_complete_ {
            get {
                return ResourceManager.GetString("The task {0} did not complete.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task {0} has completed..
        /// </summary>
        internal static string The_task__0__has_completed_ {
            get {
                return ResourceManager.GetString("The task {0} has completed.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task {0} has completed with errors..
        /// </summary>
        internal static string The_task__0__has_completed_with_errors_ {
            get {
                return ResourceManager.GetString("The task {0} has completed with errors.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task {0} has completed with warnings..
        /// </summary>
        internal static string The_task__0__has_completed_with_warnings_ {
            get {
                return ResourceManager.GetString("The task {0} has completed with warnings.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task has no data to erase..
        /// </summary>
        internal static string The_task_has_no_data_to_erase_ {
            get {
                return ResourceManager.GetString("The task has no data to erase.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task list could not be imported. The error returned was: {0}.
        /// </summary>
        internal static string The_task_list_could_not_be_imported__The_error_returned_was___0_ {
            get {
                return ResourceManager.GetString("The task list could not be imported. The error returned was: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task needs to run on at least one day a week.
        /// </summary>
        internal static string The_task_needs_to_run_on_at_least_one_day_a_week {
            get {
                return ResourceManager.GetString("The task needs to run on at least one day a week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no new updates or plugins available for Eraser..
        /// </summary>
        internal static string There_are_no_new_updates_or_plugins_available_for_Eraser_ {
            get {
                return ResourceManager.GetString("There are no new updates or plugins available for Eraser.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total: {0,2:#0.00%}.
        /// </summary>
        internal static string Total___0_2__0_00__ {
            get {
                return ResourceManager.GetString("Total: {0,2:#0.00%}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total: Unknown.
        /// </summary>
        internal static string Total__Unknown {
            get {
                return ResourceManager.GetString("Total: Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown action {0}.
        /// </summary>
        internal static string Unknown_action__0_ {
            get {
                return ResourceManager.GetString("Unknown action {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown argument: {0}, skipped..
        /// </summary>
        internal static string Unknown_argument___0___skipped_ {
            get {
                return ResourceManager.GetString("Unknown argument: {0}, skipped.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown schedule type: {0}.
        /// </summary>
        internal static string Unknown_schedule_type___0_ {
            get {
                return ResourceManager.GetString("Unknown schedule type: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates.
        /// </summary>
        internal static string Updates {
            get {
                return ResourceManager.GetString("Updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have dropped a set of files and folders into Eraser. What do you want to do with them?.
        /// </summary>
        internal static string You_have_dropped_a_set_of_files_and_folders_into_Eraser__What_do_you_want_to_do_with_them_ {
            get {
                return ResourceManager.GetString("You have dropped a set of files and folders into Eraser. What do you want to do w" +
                        "ith them?", resourceCulture);
            }
        }
    }
}
