<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DragDropLib</name>
    </assembly>
    <members>
        <member name="M:DragDropLib.SwfDropTargetHelperExtensions.DragEnter(DragDropLib.IDropTargetHelper,System.Windows.Forms.Control,System.Windows.Forms.IDataObject,System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the specified Control received
            a DragEnter event.
            </summary>
            <param name="dropHelper">The DragDropHelper instance to notify.</param>
            <param name="control">The Control the received the DragEnter event.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:DragDropLib.SwfDropTargetHelperExtensions.DragOver(DragDropLib.IDropTargetHelper,System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Control received
            a DragOver event.
            </summary>
            <param name="dropHelper">The DragDropHelper instance to notify.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:DragDropLib.SwfDropTargetHelperExtensions.Drop(DragDropLib.IDropTargetHelper,System.Windows.Forms.IDataObject,System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Control received
            a Drop event.
            </summary>
            <param name="dropHelper">The DragDropHelper instance to notify.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="T:System.Windows.Forms.SwfDataObjectExtensions">
            <summary>
            Provides extended functionality to the System.Windows.Forms.IDataObject interface.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.SetDragImage(System.Windows.Forms.IDataObject,System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Sets the drag image as the rendering of a control.
            </summary>
            <param name="dataObject">The DataObject to set the drag image on.</param>
            <param name="control">The Control to render as the drag image.</param>
            <param name="cursorOffset">The location of the cursor relative to the control.</param>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.SetDragImage(System.Windows.Forms.IDataObject,System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Sets the drag image.
            </summary>
            <param name="dataObject">The DataObject to set the drag image on.</param>
            <param name="image">The drag image.</param>
            <param name="cursorOffset">The location of the cursor relative to the image.</param>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.GetHbitmapFromImage(System.Drawing.Image)">
            <summary>
            Gets an HBITMAP from any image.
            </summary>
            <param name="image">The image to get an HBITMAP from.</param>
            <returns>An HBITMAP pointer.</returns>
            <remarks>
            The caller is responsible to call DeleteObject on the HBITMAP.
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.SetDropDescription(System.Windows.Forms.IDataObject,System.Windows.Forms.DropImageType,System.String,System.String)">
            <summary>
            Sets the drop description for the drag image manager.
            </summary>
            <param name="dataObject">The DataObject to set.</param>
            <param name="type">The type of the drop image.</param>
            <param name="format">The format string for the description.</param>
            <param name="insert">The parameter for the drop description.</param>
            <remarks>
            When setting the drop description, the text can be set in two part,
            which will be rendered slightly differently to distinguish the description
            from the subject. For example, the format can be set as "Move to %1" and
            the insert as "Temp". When rendered, the "%1" in format will be replaced
            with "Temp", but "Temp" will be rendered slightly different from "Move to ".
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.SetDataEx(System.Windows.Forms.IDataObject,System.String,System.Object)">
            <summary>
            Sets managed data to a clipboard DataObject.
            </summary>
            <param name="dataObject">The DataObject to set the data on.</param>
            <param name="format">The clipboard format.</param>
            <param name="data">The data object.</param>
            <remarks>
            Because the underlying data store is not storing managed objects, but
            unmanaged ones, this function provides intelligent conversion, allowing
            you to set unmanaged data into the COM implemented IDataObject.</remarks>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.GetCompatibleTymed(System.String,System.Object)">
            <summary>
            Gets a system compatible TYMED for the given format.
            </summary>
            <param name="format">The data format.</param>
            <param name="data">The data.</param>
            <returns>A TYMED value, indicating a system compatible TYMED that can
            be used for data marshaling.</returns>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.IsFormatEqual(System.String,System.String)">
            <summary>
            Compares the equality of two clipboard formats.
            </summary>
            <param name="formatA">First format.</param>
            <param name="formatB">Second format.</param>
            <returns>True if the formats are equal. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Forms.SwfDataObjectExtensions.GetDataEx(System.Windows.Forms.IDataObject,System.String)">
            <summary>
            Gets managed data from a clipboard DataObject.
            </summary>
            <param name="dataObject">The DataObject to obtain the data from.</param>
            <param name="format">The format for which to get the data in.</param>
            <returns>The data object instance.</returns>
        </member>
        <member name="M:DragDropLib.WpfDropTargetHelperExtensions.DragEnter(DragDropLib.IDropTargetHelper,System.Windows.Window,System.Windows.IDataObject,System.Windows.Point,System.Windows.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the specified Window received
            a DragEnter event.
            </summary>
            <param name="dropHelper">The DragDropHelper instance to notify.</param>
            <param name="window">The Window the received the DragEnter event.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:DragDropLib.WpfDropTargetHelperExtensions.DragOver(DragDropLib.IDropTargetHelper,System.Windows.Point,System.Windows.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Window received
            a DragOver event.
            </summary>
            <param name="dropHelper">The DragDropHelper instance to notify.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:DragDropLib.WpfDropTargetHelperExtensions.Drop(DragDropLib.IDropTargetHelper,System.Windows.IDataObject,System.Windows.Point,System.Windows.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Window received
            a Drop event.
            </summary>
            <param name="dropHelper">The DragDropHelper instance to notify.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:DragDropLib.WpfDragDropLibExtensions.ToWin32Point(System.Windows.Point)">
            <summary>
            Converts a System.Windows.Point value to a DragDropLib.Win32Point value.
            </summary>
            <param name="pt">Input value.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:DragDropLib.SwfDragDropLibExtensions.ToWin32Point(System.Drawing.Point)">
            <summary>
            Converts a System.Windows.Point value to a DragDropLib.Win32Point value.
            </summary>
            <param name="pt">Input value.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:System.Windows.WpfDataObjectExtensions">
            <summary>
            Provides extended functionality to the System.Windows.IDataObject interface.
            </summary>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.SetDragImage(System.Windows.IDataObject,System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Sets the drag image by rendering the specified UIElement.
            </summary>
            <param name="dataObject">The DataObject to set the drag image for.</param>
            <param name="element">The element to render as the drag image.</param>
            <param name="cursorOffset">The offset of the cursor relative to the UIElement.</param>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.SetDragImage(System.Windows.IDataObject,System.Windows.Media.Imaging.BitmapSource,System.Windows.Point)">
            <summary>
            Sets the drag image from a BitmapSource.
            </summary>
            <param name="dataObject">The DataObject on which to set the drag image.</param>
            <param name="image">The image source.</param>
            <param name="cursorOffset">The offset relative to the bitmap image.</param>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.SetDragImage(System.Windows.IDataObject,System.Drawing.Bitmap,System.Windows.Point)">
            <summary>
            Sets the drag image.
            </summary>
            <param name="dataObject">The DataObject to set the drag image on.</param>
            <param name="image">The drag image.</param>
            <param name="cursorOffset">The location of the cursor relative to the image.</param>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.SetDropDescription(System.Windows.IDataObject,System.Windows.DropImageType,System.String,System.String)">
            <summary>
            Sets the drop description for the drag image manager.
            </summary>
            <param name="dataObject">The DataObject to set.</param>
            <param name="type">The type of the drop image.</param>
            <param name="format">The format string for the description.</param>
            <param name="insert">The parameter for the drop description.</param>
            <remarks>
            When setting the drop description, the text can be set in two part,
            which will be rendered slightly differently to distinguish the description
            from the subject. For example, the format can be set as "Move to %1" and
            the insert as "Temp". When rendered, the "%1" in format will be replaced
            with "Temp", but "Temp" will be rendered slightly different from "Move to ".
            </remarks>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.SetDataEx(System.Windows.IDataObject,System.String,System.Object)">
            <summary>
            Sets managed data to a clipboard DataObject.
            </summary>
            <param name="dataObject">The DataObject to set the data on.</param>
            <param name="format">The clipboard format.</param>
            <param name="data">The data object.</param>
            <remarks>
            Because the underlying data store is not storing managed objects, but
            unmanaged ones, this function provides intelligent conversion, allowing
            you to set unmanaged data into the COM implemented IDataObject.</remarks>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.GetCompatibleTymed(System.String,System.Object)">
            <summary>
            Gets a system compatible TYMED for the given format.
            </summary>
            <param name="format">The data format.</param>
            <param name="data">The data.</param>
            <returns>A TYMED value, indicating a system compatible TYMED that can
            be used for data marshaling.</returns>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.IsFormatEqual(System.String,System.String)">
            <summary>
            Compares the equality of two clipboard formats.
            </summary>
            <param name="formatA">First format.</param>
            <param name="formatB">Second format.</param>
            <returns>True if the formats are equal. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.GetDataEx(System.Windows.IDataObject,System.String)">
            <summary>
            Gets managed data from a clipboard DataObject.
            </summary>
            <param name="dataObject">The DataObject to obtain the data from.</param>
            <param name="format">The format for which to get the data in.</param>
            <returns>The data object instance.</returns>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.GetDeviceDpi(System.Windows.Media.Visual,System.Int32@,System.Int32@)">
            <summary>
            Gets the device capabilities.
            </summary>
            <param name="reference">A reference UIElement for getting the relevant device caps.</param>
            <param name="dpix">The horizontal DPI.</param>
            <param name="dpiy">The vertical DPI.</param>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.GetBitmapFromBitmapSource(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Color)">
            <summary>
            Gets a System.Drawing.Bitmap from a BitmapSource.
            </summary>
            <param name="source">The source image from which to create our Bitmap.</param>
            <param name="transparencyKey">The transparency key. This is used by the DragDropHelper
            in rendering transparent pixels.</param>
            <returns>An instance of Bitmap which is a copy of the BitmapSource's image.</returns>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.ReplaceTransparentPixelsWithTransparentKey(System.Drawing.Imaging.BitmapData,System.Drawing.Color)">
            <summary>
            Replaces any pixel with a zero alpha value with the specified transparency key.
            </summary>
            <param name="bmpData">The bitmap data in which to perform the operation.</param>
            <param name="transKey">The transparency color. This color is rendered transparent
            by the DragDropHelper.</param>
            <remarks>
            This function only supports 32-bit pixel formats for now.
            </remarks>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.ToDrawingColor(System.Windows.Media.Color)">
            <summary>
            Converts a System.Windows.Media.Color to System.Drawing.Color.
            </summary>
            <param name="color">System.Windows.Media.Color value to convert.</param>
            <returns>System.Drawing.Color value.</returns>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.ToDrawingRectangle(System.Windows.Int32Rect)">
            <summary>
            Converts a System.Windows.Int32Rect to a System.Drawing.Rectangle value.
            </summary>
            <param name="rect">The System.Windows.Int32Rect to convert.</param>
            <returns>The System.Drawing.Rectangle converted value.</returns>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.ConvertColorPalette(System.Drawing.Imaging.ColorPalette,System.Windows.Media.Imaging.BitmapPalette)">
            <summary>
            Converts the entries in a BitmapPalette to ColorPalette entries.
            </summary>
            <param name="destPalette">ColorPalette destination palette.</param>
            <param name="bitmapPalette">BitmapPalette source palette.</param>
        </member>
        <member name="M:System.Windows.WpfDataObjectExtensions.ConvertPixelFormat(System.Windows.Media.PixelFormat)">
            <summary>
            Converts a System.Windows.Media.PixelFormat instance to a
            System.Drawing.Imaging.PixelFormat value.
            </summary>
            <param name="pixelFormat">The input PixelFormat.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:DragDropLib.DataObject">
            <summary>
            Implements the COM version of IDataObject including SetData.
            </summary>
            <remarks>
            <para>Use this object when using shell (or other unmanged) features
            that utilize the clipboard and/or drag and drop.</para>
            <para>The System.Windows.DataObject (.NET 3.0) and
            System.Windows.Forms.DataObject do not support SetData from their COM
            IDataObject interface implementation.</para>
            <para>To use this object with .NET drag and drop, create an instance
            of System.Windows.DataObject (.NET 3.0) or System.Window.Forms.DataObject
            passing an instance of DataObject as the only constructor parameter. For
            example:</para>
            <code>
            System.Windows.DataObject data = new System.Windows.DataObject(new DragDropLib.DataObject());
            </code>
            </remarks>
        </member>
        <member name="M:DragDropLib.DataObject.#ctor">
            <summary>
            Creates an empty instance of DataObject.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.Finalize">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.ClearStorage">
            <summary>
            Clears the internal storage array.
            </summary>
            <remarks>
            ClearStorage is called by the IDisposable.Dispose method implementation
            to make sure all unmanaged references are released properly.
            </remarks>
        </member>
        <member name="M:DragDropLib.DataObject.Dispose">
            <summary>
            Releases resources.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.Dispose(System.Boolean)">
            <summary>
            Releases resources.
            </summary>
            <param name="disposing">Indicates if the call was made by a managed caller, or the garbage collector.
            True indicates that someone called the Dispose method directly. False indicates that the garbage collector
            is finalizing the release of the object instance.</param>
        </member>
        <member name="M:DragDropLib.DataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
            <summary>
            Adds an advisory connection for the specified format.
            </summary>
            <param name="pFormatetc">The format for which this sink is called for changes.</param>
            <param name="advf">Advisory flags to specify callback behavior.</param>
            <param name="adviseSink">The IAdviseSink to call for this connection.</param>
            <param name="connection">Returns the new connection's ID.</param>
            <returns>An HRESULT.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.DUnadvise(System.Int32)">
            <summary>
            Removes an advisory connection.
            </summary>
            <param name="connection">The connection id to remove.</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
            <summary>
            Gets an enumerator for the formats contained in this DataObject.
            </summary>
            <param name="direction">The direction of the data.</param>
            <returns>An instance of the IEnumFORMATETC interface.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Gets the specified data.
            </summary>
            <param name="format">The requested data format.</param>
            <param name="medium">When the function returns, contains the requested data.</param>
        </member>
        <member name="M:DragDropLib.DataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Gets the specified data.
            </summary>
            <param name="format">The requested data format.</param>
            <param name="medium">When the function returns, contains the requested data.</param>
            <remarks>Differs from GetData only in that the STGMEDIUM storage is
            allocated and owned by the caller.</remarks>
        </member>
        <member name="M:DragDropLib.DataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>
            Determines if data of the requested format is present.
            </summary>
            <param name="format">The request data format.</param>
            <returns>Returns the status of the request. If the data is present, S_OK is returned.
            If the data is not present, an error code with the best guess as to the reason is returned.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
            <summary>
            Sets data in the specified format into storage.
            </summary>
            <param name="formatIn">The format of the data.</param>
            <param name="medium">The data.</param>
            <param name="release">If true, ownership of the medium's memory will be transferred
            to this object. If false, a copy of the medium will be created and maintained, and
            the caller is responsible for the memory of the medium it provided.</param>
        </member>
        <member name="M:DragDropLib.DataObject.CopyMedium(System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Creates a copy of the STGMEDIUM structure.
            </summary>
            <param name="medium">The data to copy.</param>
            <returns>The copied data.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.GetDataEntry(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Collections.Generic.KeyValuePair{System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.STGMEDIUM}@)">
            <summary>
            Gets a data entry by the specified format.
            </summary>
            <param name="pFormatetc">The format to locate the data entry for.</param>
            <param name="dataEntry">The located data entry.</param>
            <returns>True if the data entry was found, otherwise False.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.RaiseDataChanged(System.Int32,System.Collections.Generic.KeyValuePair{System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.STGMEDIUM}@)">
            <summary>
            Raises the DataChanged event for the specified connection.
            </summary>
            <param name="connection">The connection id.</param>
            <param name="dataEntry">The data entry for which to raise the event.</param>
        </member>
        <member name="M:DragDropLib.DataObject.RaiseDataChanged(System.Collections.Generic.KeyValuePair{System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.STGMEDIUM}@)">
            <summary>
            Raises the DataChanged event for any advisory connections that
            are listening for it.
            </summary>
            <param name="dataEntry">The relevant data entry.</param>
        </member>
        <member name="M:DragDropLib.DataObject.IsFormatCompatible(System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.FORMATETC)">
            <summary>
            Determines if the formats are compatible.
            </summary>
            <param name="format1">A FORMATETC.</param>
            <param name="format2">A FORMATETC.</param>
            <returns>True if the formats are compatible, otherwise False.</returns>
            <remarks>Compatible formats have the same DVASPECT, same format ID, and share
            at least one TYMED.</remarks>
        </member>
        <member name="M:DragDropLib.DataObject.IsFormatCompatible(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>
            Determines if the formats are compatible.
            </summary>
            <param name="format1">A FORMATETC.</param>
            <param name="format2">A FORMATETC.</param>
            <returns>True if the formats are compatible, otherwise False.</returns>
            <remarks>Compatible formats have the same DVASPECT, same format ID, and share
            at least one TYMED.</remarks>
        </member>
        <member name="T:DragDropLib.DataObject.EnumFORMATETC">
            <summary>
            Helps enumerate the formats available in our DataObject class.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.#ctor(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.STGMEDIUM}})">
            <summary>
            Creates an instance from a list of key value pairs.
            </summary>
            <param name="storage">List of FORMATETC/STGMEDIUM key value pairs</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.#ctor(System.Runtime.InteropServices.ComTypes.FORMATETC[])">
            <summary>
            Creates an instance from an array of FORMATETC's.
            </summary>
            <param name="formats">Array of formats to enumerate.</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
            <summary>
            Creates a clone of this enumerator.
            </summary>
            <param name="newEnum">When this function returns, contains a new instance of IEnumFORMATETC.</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
            <summary>
            Retrieves the next elements from the enumeration.
            </summary>
            <param name="celt">The number of elements to retrieve.</param>
            <param name="rgelt">An array to receive the formats requested.</param>
            <param name="pceltFetched">An array to receive the number of element fetched.</param>
            <returns>If the fetched number of formats is the same as the requested number, S_OK is returned.
            There are several reasons S_FALSE may be returned: (1) The requested number of elements is less than
            or equal to zero. (2) The rgelt parameter equals null. (3) There are no more elements to enumerate.
            (4) The requested number of elements is greater than one and pceltFetched equals null or does not
            have at least one element in it. (5) The number of fetched elements is less than the number of
            requested elements.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Reset">
            <summary>
            Resets the state of enumeration.
            </summary>
            <returns>S_OK</returns>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Skip(System.Int32)">
            <summary>
            Skips the number of elements requested.
            </summary>
            <param name="celt">The number of elements to skip.</param>
            <returns>If there are not enough remaining elements to skip, returns S_FALSE. Otherwise, S_OK is returned.</returns>
        </member>
        <member name="F:System.Windows.Forms.DropTargetHelper.s_instance">
            <summary>
            Internal instance of the DragDropHelper.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DropTargetHelper.s_dataContext">
            <summary>
            Internal cache of IDataObjects related to drop targets.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.DragEnter(System.Windows.Forms.Control,System.Windows.Forms.IDataObject,System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the specified Control received
            a DragEnter event.
            </summary>
            <param name="control">The Control the received the DragEnter event.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.DragEnter(System.Windows.Forms.Control,System.Windows.Forms.IDataObject,System.Drawing.Point,System.Windows.Forms.DragDropEffects,System.String,System.String)">
            <summary>
            Sets the drop description of the IDataObject and then notifies the
            DragDropHelper that the specified Control received a DragEnter event.
            </summary>
            <param name="control">The Control the received the DragEnter event.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
            <param name="descriptionMessage">The drop description message.</param>
            <param name="descriptionInsert">The drop description insert.</param>
            <remarks>
            Because the DragLeave event in SWF does not provide the IDataObject in the
            event args, this DragEnter override of the DropTargetHelper will cache a
            copy of the IDataObject based on the provided Control so that it may be
            cleared using the DragLeave override that takes a Control parameter. Note that
            if you use this override of DragEnter, you must call the DragLeave override
            that takes a Control parameter to avoid a possible memory leak. However, calling
            this method multiple times with the same Control parameter while not calling the
            DragLeave method will not leak memory.
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.DragOver(System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Control received
            a DragOver event.
            </summary>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.DragLeave">
            <summary>
            Notifies the DragDropHelper that the current Control received
            a DragLeave event.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.DragLeave(System.Windows.Forms.Control)">
            <summary>
            Clears the drop description of the IDataObject previously associated to the
            provided control, then notifies the DragDropHelper that the current control
            received a DragLeave event.
            </summary>
            <remarks>
            Because the DragLeave event in SWF does not provide the IDataObject in the
            event args, this DragLeave override of the DropTargetHelper will lookup a
            cached copy of the IDataObject based on the provided Control and clear
            the drop description. Note that the underlying DragLeave call of the
            Shell IDropTargetHelper object keeps the current control cached, so the
            control passed to this method is only relevant to looking up the IDataObject
            on which to clear the drop description.
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.Drop(System.Windows.Forms.IDataObject,System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Control received
            a DragOver event.
            </summary>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:System.Windows.Forms.DropTargetHelper.Show(System.Boolean)">
            <summary>
            Tells the DragDropHelper to show or hide the drag image.
            </summary>
            <param name="show">True to show the image. False to hide it.</param>
        </member>
        <member name="T:System.Windows.Forms.DragSourceHelper">
            <summary>
            Provides helper methods for working with the Shell drag image manager.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DragSourceHelper.s_dataContext">
            <summary>
            Keeps a cached drag source context, keyed on the drag source control.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DragSourceHelper.s_dropDescriptions">
            <summary>
            Keeps drop description info for a data object.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.CreateDataObject">
            <summary>
            Creates a default DataObject with an internal COM callable implemetation of IDataObject.
            </summary>
            <returns>A new instance of System.Windows.Forms.IDataObject.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.CreateDataObject(System.Drawing.Bitmap,System.Drawing.Point)">
            <summary>
            Creates a DataObject with an internal COM callable implementation of IDataObject.
            This override also sets the drag image to the specified Bitmap and sets a flag
            on the system IDragSourceHelper2 to allow drop descriptions.
            </summary>
            <param name="dragImage">A Bitmap from which to create the drag image.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>A new instance of System.Windows.Forms.IDataObject.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.CreateDataObject(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Creates a DataObject with an internal COM callable implementation of IDataObject.
            This override also sets the drag image to a bitmap created from the specified
            Control instance's UI. It also sets a flag on the system IDragSourceHelper2 to
            allow drop descriptions.
            </summary>
            <param name="control">A Control to initialize the drag image from.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>A new instance of System.Windows.Forms.IDataObject.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.RegisterDefaultDragSource(System.Windows.Forms.Control,System.Windows.Forms.IDataObject)">
            <summary>
            Registers a Control as a drag source and provides default implementations of
            GiveFeedback and QueryContinueDrag.
            </summary>
            <param name="control">The drag source Control instance.</param>
            <param name="data">The DataObject associated to the drag source.</param>
            <remarks>Callers must call UnregisterDefaultDragSource when the drag and drop
            operation is complete to avoid memory leaks.</remarks>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.RegisterDefaultDragSource(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Registers a Control as a drag source and provides default implementations of
            GiveFeedback and QueryContinueDrag. This override also handles the data object
            creation, including initialization of the drag image from the Control.
            </summary>
            <param name="control">The drag source Control instance.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>The created data object.</returns>
            <remarks>Callers must call UnregisterDefaultDragSource when the drag and drop
            operation is complete to avoid memory leaks.</remarks>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.RegisterDefaultDragSource(System.Windows.Forms.Control,System.Drawing.Bitmap,System.Drawing.Point)">
            <summary>
            Registers a Control as a drag source and provides default implementations of
            GiveFeedback and QueryContinueDrag. This override also handles the data object
            creation, including initialization of the drag image from the speicified Bitmap.
            </summary>
            <param name="control">The drag source Control instance.</param>
            <param name="dragImage">A Bitmap to initialize the drag image from.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>The created data object.</returns>
            <remarks>Callers must call UnregisterDefaultDragSource when the drag and drop
            operation is complete to avoid memory leaks.</remarks>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.UnregisterDefaultDragSource(System.Windows.Forms.Control)">
            <summary>
            Unregisters a drag source from the internal cache.
            </summary>
            <param name="control">The drag source Control.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DoDragDrop(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.DragDropEffects,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Performs a default drag and drop operation for the specified drag source.
            </summary>
            <param name="control">The drag source Control.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <param name="allowedEffects">The allowed drop effects.</param>
            <param name="data">The associated data.</param>
            <returns>The accepted drop effects from the completed operation.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DoDragDrop(System.Windows.Forms.Control,System.Drawing.Bitmap,System.Drawing.Point,System.Windows.Forms.DragDropEffects,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Performs a default drag and drop operation for the specified drag source.
            </summary>
            <param name="control">The drag source Control.</param>
            <param name="dragImage">The Bitmap to initialize the drag image from.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <param name="allowedEffects">The allowed drop effects.</param>
            <param name="data">The associated data.</param>
            <returns>The accepted drop effects from the completed operation.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DoDragDropInternal(System.Windows.Forms.Control,System.Windows.Forms.IDataObject,System.Windows.Forms.DragDropEffects,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Performs a default drag and drop operation for the specified drag source.
            </summary>
            <param name="control">The drag source Control.</param>
            <param name="dataObject">The data object associated to the drag and drop operation.</param>
            <param name="allowedEffects">The allowed drop effects.</param>
            <param name="data">The associated data.</param>
            <returns>The accepted drop effects from the completed operation.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DefaultGiveFeedbackHandler(System.Object,System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>
            Provides a default GiveFeedback event handler for drag sources.
            </summary>
            <param name="sender">The object that raised the event. Should be set to the drag source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DefaultGiveFeedback(System.Windows.Forms.IDataObject,System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>
            Provides a default GiveFeedback event handler for drag sources.
            </summary>
            <param name="data">The associated data object for the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DefaultQueryContinueDragHandler(System.Object,System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Provides a default handler for the QueryContinueDrag drag source event.
            </summary>
            <param name="sender">The object that raised the event. Not used internally.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.DefaultQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Provides a default handler for the QueryContinueDrag drag source event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.AllowDropDescription(System.Boolean)">
            <summary>
            Sets a flag on the system IDragSourceHelper2 object to allow drop descriptions
            on the drag image.
            </summary>
            <param name="allow">True to allow drop descriptions, otherwise False.</param>
            <remarks>Must be called before IDragSourceHelper.InitializeFromBitmap or
            IDragSourceHelper.InitializeFromControl is called.</remarks>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.InvalidateDragImage(System.Windows.Forms.IDataObject)">
            <summary>
            Invalidates the drag image.
            </summary>
            <param name="dataObject">The data object for which to invalidate the drag image.</param>
            <remarks>This call tells the drag image manager to reformat the internal
            cached drag image, based on the already set drag image bitmap and current drop
            description.</remarks>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.GetIntPtrFromData(System.Object)">
            <summary>
            Gets an IntPtr from data acquired from a data object.
            </summary>
            <param name="data">The data that contains the IntPtr.</param>
            <returns>An IntPtr.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.IsShowingLayered(System.Windows.Forms.IDataObject)">
            <summary>
            Determines if the IsShowingLayered flag is set on the data object.
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>True if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.GetBooleanFromData(System.Object)">
            <summary>
            Converts compatible clipboard data to a boolean value.
            </summary>
            <param name="data">The clipboard data.</param>
            <returns>True if the data can be converted to a boolean and is set, otherwise False.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.IsDropDescriptionValid(System.Windows.Forms.IDataObject)">
            <summary>
            Checks if the current drop description, if any, is valid.
            </summary>
            <param name="dataObject">The DataObject from which to get the drop description.</param>
            <returns>True if the drop description is set, and the 
            DropImageType is not DropImageType.Invalid.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.IsDropDescriptionDefault(System.Windows.Forms.IDataObject)">
            <summary>
            Checks if the IsDefault drop description flag is set for the associated DataObject.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <returns>True if the IsDefault flag is set, otherwise False.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.InvalidateRequired(System.Windows.Forms.IDataObject)">
            <summary>
            Checks if the InvalidateRequired drop description flag is set for the associated DataObject.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <returns>True if the InvalidateRequired flag is set, otherwise False.</returns>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.SetDropDescriptionIsDefault(System.Windows.Forms.IDataObject,System.Boolean)">
            <summary>
            Sets the IsDefault drop description flag for the associated DataObject.
            </summary>
            <param name="dataObject">The associdated DataObject.</param>
            <param name="isDefault">True to set the flag, False to unset it.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.SetInvalidateRequired(System.Windows.Forms.IDataObject,System.Boolean)">
            <summary>
            Sets the InvalidatedRequired drop description flag for the associated DataObject.
            </summary>
            <param name="dataObject">The associdated DataObject.</param>
            <param name="isDefault">True to set the flag, False to unset it.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.SetDropDescriptionFlag(System.Windows.Forms.IDataObject,System.Windows.Forms.DragSourceHelper.DropDescriptionFlags)">
            <summary>
            Sets a drop description flag.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <param name="flag">The drop description flag to set.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.UnsetDropDescriptionFlag(System.Windows.Forms.IDataObject,System.Windows.Forms.DragSourceHelper.DropDescriptionFlags)">
            <summary>
            Unsets a drop description flag.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <param name="flag">The drop description flag to unset.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.GetDropImageType(System.Windows.Forms.IDataObject)">
            <summary>
            Gets the current DropDescription's drop image type.
            </summary>
            <param name="dataObject">The DataObject.</param>
            <returns>The current drop image type.</returns>
        </member>
        <member name="T:System.Windows.Forms.DragSourceHelper.DropDescriptionFlags">
            <summary>
            Internally used to track information about the current drop description.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DragSourceHelper.DragSourceEntry">
            <summary>
            Represents a drag source context entry.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DragSourceHelper.AdviseSink">
            <summary>
            Provides an advisory sink for the COM IDataObject implementation.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.AdviseSink.#ctor(System.Windows.Forms.IDataObject)">
            <summary>
            Creates an AdviseSink associated to the specified data object.
            </summary>
            <param name="data">The data object.</param>
        </member>
        <member name="M:System.Windows.Forms.DragSourceHelper.AdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Handles DataChanged events from a COM IDataObject.
            </summary>
            <param name="format">The data format that had a change.</param>
            <param name="stgmedium">The data value.</param>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions">
            <summary>
            Provides extended functionality for the COM IDataObject interface.
            </summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.SetDropDescription(System.Runtime.InteropServices.ComTypes.IDataObject,DragDropLib.DropDescription)">
            <summary>
            Sets the drop description for the drag image manager.
            </summary>
            <param name="dataObject">The DataObject to set.</param>
            <param name="dropDescription">The drop description.</param>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.GetDropDescription(System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Gets the DropDescription format data.
            </summary>
            <param name="dataObject">The DataObject.</param>
            <returns>The DropDescription, if set.</returns>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.Advise(System.Runtime.InteropServices.ComTypes.IDataObject,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.String,System.Runtime.InteropServices.ComTypes.ADVF)">
            <summary>
            Sets up an advisory connection to the data object.
            </summary>
            <param name="dataObject">The data object on which to set the advisory connection.</param>
            <param name="sink">The advisory sink.</param>
            <param name="format">The format on which to callback on.</param>
            <param name="advf">Advisory flags. Can be 0.</param>
            <returns>The ID of the newly created advisory connection.</returns>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.FillFormatETC(System.String,System.Runtime.InteropServices.ComTypes.TYMED,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>
            Fills a FORMATETC structure.
            </summary>
            <param name="format">The format name.</param>
            <param name="tymed">The accepted TYMED.</param>
            <param name="formatETC">The structure to fill.</param>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.SetManagedData(System.Runtime.InteropServices.ComTypes.IDataObject,System.String,System.Object)">
            <summary>
            Sets managed data to a clipboard DataObject.
            </summary>
            <param name="dataObject">The DataObject to set the data on.</param>
            <param name="format">The clipboard format.</param>
            <param name="data">The data object.</param>
            <remarks>
            Because the underlying data store is not storing managed objects, but
            unmanaged ones, this function provides intelligent conversion, allowing
            you to set unmanaged data into the COM implemented IDataObject.</remarks>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.GetManagedData(System.Runtime.InteropServices.ComTypes.IDataObject,System.String)">
            <summary>
            Gets managed data from a clipboard DataObject.
            </summary>
            <param name="dataObject">The DataObject to obtain the data from.</param>
            <param name="format">The format for which to get the data in.</param>
            <returns>The data object instance.</returns>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.GetMediumFromObject(System.Object,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Serializes managed data to an HGLOBAL.
            </summary>
            <param name="data">The managed data object.</param>
            <returns>An STGMEDIUM pointing to the allocated HGLOBAL.</returns>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.GetAsSerializable(System.Object)">
            <summary>
            Gets a serializable object representing the data.
            </summary>
            <param name="obj">The data.</param>
            <returns>If the data is serializable, then it is returned. Otherwise,
            type conversion is attempted. If successful, a string value will be
            returned.</returns>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.ConvertDataFromString(System.String,System.Type)">
            <summary>
            Converts data from a string to the specified format.
            </summary>
            <param name="data">The data to convert.</param>
            <param name="dataType">The target data type.</param>
            <returns>Returns the converted data instance.</returns>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.ComDataObjectExtensions.GetTypeConverterForType(System.Type)">
            <summary>
            Gets a TypeConverter instance for the specified type.
            </summary>
            <param name="dataType">The type.</param>
            <returns>An instance of a TypeConverter for the type, if one exists.</returns>
        </member>
        <member name="F:System.Windows.DropTargetHelper.s_instance">
            <summary>
            Internal instance of the DragDropHelper.
            </summary>
        </member>
        <member name="M:System.Windows.DropTargetHelper.DragEnter(System.Windows.Window,System.Windows.IDataObject,System.Windows.Point,System.Windows.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the specified Window received
            a DragEnter event.
            </summary>
            <param name="window">The Window the received the DragEnter event.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:System.Windows.DropTargetHelper.DragEnter(System.Windows.Window,System.Windows.IDataObject,System.Windows.Point,System.Windows.DragDropEffects,System.String,System.String)">
            <summary>
            Notifies the DragDropHelper that the specified Window received
            a DragEnter event.
            </summary>
            <param name="window">The Window the received the DragEnter event.</param>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
            <param name="descriptionMessage">The drop description message.</param>
            <param name="descriptionInsert">The drop description insert.</param>
            <remarks>Callers of this DragEnter override should make sure to call
            the DragLeave override taking an IDataObject parameter in order to clear
            the drop description.</remarks>
        </member>
        <member name="M:System.Windows.DropTargetHelper.DragOver(System.Windows.Point,System.Windows.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Window received
            a DragOver event.
            </summary>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:System.Windows.DropTargetHelper.DragLeave">
            <summary>
            Notifies the DragDropHelper that the current Window received
            a DragLeave event.
            </summary>
        </member>
        <member name="M:System.Windows.DropTargetHelper.DragLeave(System.Windows.IDataObject)">
            <summary>
            Notifies the DragDropHelper that the current Window received
            a DragLeave event.
            </summary>
            <param name="data">The data object associated to the event.</param>
        </member>
        <member name="M:System.Windows.DropTargetHelper.Drop(System.Windows.IDataObject,System.Windows.Point,System.Windows.DragDropEffects)">
            <summary>
            Notifies the DragDropHelper that the current Window received
            a DragOver event.
            </summary>
            <param name="data">The DataObject containing a drag image.</param>
            <param name="cursorOffset">The current cursor's offset relative to the window.</param>
            <param name="effect">The accepted drag drop effect.</param>
        </member>
        <member name="M:System.Windows.DropTargetHelper.Show(System.Boolean)">
            <summary>
            Tells the DragDropHelper to show or hide the drag image.
            </summary>
            <param name="show">True to show the image. False to hide it.</param>
        </member>
        <member name="T:System.Windows.DragSourceHelper">
            <summary>
            Provides helper methods for working with the Shell drag image manager.
            </summary>
        </member>
        <member name="F:System.Windows.DragSourceHelper.s_dataContext">
            <summary>
            Keeps a cached drag source context, keyed on the drag source control.
            </summary>
        </member>
        <member name="F:System.Windows.DragSourceHelper.s_dropDescriptions">
            <summary>
            Keeps drop description info for a data object.
            </summary>
        </member>
        <member name="M:System.Windows.DragSourceHelper.CreateDataObject">
            <summary>
            Creates a default DataObject with an internal COM callable implemetation of IDataObject.
            </summary>
            <returns>A new instance of System.Windows.Forms.IDataObject.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.CreateDataObject(System.Windows.Media.Imaging.BitmapSource,System.Windows.Point)">
            <summary>
            Creates a DataObject with an internal COM callable implementation of IDataObject.
            This override also sets the drag image to the specified Bitmap and sets a flag
            on the system IDragSourceHelper2 to allow drop descriptions.
            </summary>
            <param name="dragImage">A Bitmap from which to create the drag image.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>A new instance of System.Windows.Forms.IDataObject.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.CreateDataObject(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Creates a DataObject with an internal COM callable implementation of IDataObject.
            This override also sets the drag image to a bitmap created from the specified
            Control instance's UI. It also sets a flag on the system IDragSourceHelper2 to
            allow drop descriptions.
            </summary>
            <param name="element">A UIElement to initialize the drag image from.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>A new instance of System.Windows.Forms.IDataObject.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.RegisterDefaultDragSource(System.Windows.UIElement,System.Windows.IDataObject)">
            <summary>
            Registers a Control as a drag source and provides default implementations of
            GiveFeedback and QueryContinueDrag.
            </summary>
            <param name="dragSource">The drag source UIElement instance.</param>
            <param name="data">The DataObject associated to the drag source.</param>
            <remarks>Callers must call UnregisterDefaultDragSource when the drag and drop
            operation is complete to avoid memory leaks.</remarks>
        </member>
        <member name="M:System.Windows.DragSourceHelper.RegisterDefaultDragSource(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Registers a Control as a drag source and provides default implementations of
            GiveFeedback and QueryContinueDrag. This override also handles the data object
            creation, including initialization of the drag image from the Control.
            </summary>
            <param name="dragSource">The drag source UIElement instance.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>The created data object.</returns>
            <remarks>Callers must call UnregisterDefaultDragSource when the drag and drop
            operation is complete to avoid memory leaks.</remarks>
        </member>
        <member name="M:System.Windows.DragSourceHelper.RegisterDefaultDragSource(System.Windows.UIElement,System.Windows.Media.Imaging.BitmapSource,System.Windows.Point)">
            <summary>
            Registers a Control as a drag source and provides default implementations of
            GiveFeedback and QueryContinueDrag. This override also handles the data object
            creation, including initialization of the drag image from the speicified Bitmap.
            </summary>
            <param name="dragSource">The drag source UIElement instance.</param>
            <param name="dragImage">A Bitmap to initialize the drag image from.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <returns>The created data object.</returns>
            <remarks>Callers must call UnregisterDefaultDragSource when the drag and drop
            operation is complete to avoid memory leaks.</remarks>
        </member>
        <member name="M:System.Windows.DragSourceHelper.UnregisterDefaultDragSource(System.Windows.UIElement)">
            <summary>
            Unregisters a drag source from the internal cache.
            </summary>
            <param name="dragSource">The drag source UIElement.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DoDragDrop(System.Windows.UIElement,System.Windows.Point,System.Windows.DragDropEffects,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Performs a default drag and drop operation for the specified drag source.
            </summary>
            <param name="dragSource">The drag source UIElement.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <param name="allowedEffects">The allowed drop effects.</param>
            <param name="data">The associated data.</param>
            <returns>The accepted drop effects from the completed operation.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DoDragDrop(System.Windows.UIElement,System.Windows.Media.Imaging.BitmapSource,System.Windows.Point,System.Windows.DragDropEffects,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Performs a default drag and drop operation for the specified drag source.
            </summary>
            <param name="dragSource">The drag source UIElement.</param>
            <param name="dragImage">The Bitmap to initialize the drag image from.</param>
            <param name="cursorOffset">The drag image cursor offset.</param>
            <param name="allowedEffects">The allowed drop effects.</param>
            <param name="data">The associated data.</param>
            <returns>The accepted drop effects from the completed operation.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DoDragDropInternal(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.DragDropEffects,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Performs a default drag and drop operation for the specified drag source.
            </summary>
            <param name="dragSource">The drag source UIElement.</param>
            <param name="dataObject">The data object associated to the drag and drop operation.</param>
            <param name="allowedEffects">The allowed drop effects.</param>
            <param name="data">The associated data.</param>
            <returns>The accepted drop effects from the completed operation.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DefaultGiveFeedbackHandler(System.Object,System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Provides a default GiveFeedback event handler for drag sources.
            </summary>
            <param name="sender">The object that raised the event. Should be set to the drag source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DefaultGiveFeedback(System.Windows.IDataObject,System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Provides a default GiveFeedback event handler for drag sources.
            </summary>
            <param name="data">The associated data object for the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DefaultQueryContinueDragHandler(System.Object,System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Provides a default handler for the QueryContinueDrag drag source event.
            </summary>
            <param name="sender">The object that raised the event. Not used internally.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.DefaultQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Provides a default handler for the QueryContinueDrag drag source event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.AllowDropDescription(System.Boolean)">
            <summary>
            Sets a flag on the system IDragSourceHelper2 object to allow drop descriptions
            on the drag image.
            </summary>
            <param name="allow">True to allow drop descriptions, otherwise False.</param>
            <remarks>Must be called before IDragSourceHelper.InitializeFromBitmap or
            IDragSourceHelper.InitializeFromControl is called.</remarks>
        </member>
        <member name="M:System.Windows.DragSourceHelper.InvalidateDragImage(System.Windows.IDataObject)">
            <summary>
            Invalidates the drag image.
            </summary>
            <param name="dataObject">The data object for which to invalidate the drag image.</param>
            <remarks>This call tells the drag image manager to reformat the internal
            cached drag image, based on the already set drag image bitmap and current drop
            description.</remarks>
        </member>
        <member name="M:System.Windows.DragSourceHelper.GetIntPtrFromData(System.Object)">
            <summary>
            Gets an IntPtr from data acquired from a data object.
            </summary>
            <param name="data">The data that contains the IntPtr.</param>
            <returns>An IntPtr.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.IsShowingLayered(System.Windows.IDataObject)">
            <summary>
            Determines if the IsShowingLayered flag is set on the data object.
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>True if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.GetBooleanFromData(System.Object)">
            <summary>
            Converts compatible clipboard data to a boolean value.
            </summary>
            <param name="data">The clipboard data.</param>
            <returns>True if the data can be converted to a boolean and is set, otherwise False.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.IsDropDescriptionValid(System.Windows.IDataObject)">
            <summary>
            Checks if the current drop description, if any, is valid.
            </summary>
            <param name="dataObject">The DataObject from which to get the drop description.</param>
            <returns>True if the drop description is set, and the 
            DropImageType is not DropImageType.Invalid.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.IsDropDescriptionDefault(System.Windows.IDataObject)">
            <summary>
            Checks if the IsDefault drop description flag is set for the associated DataObject.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <returns>True if the IsDefault flag is set, otherwise False.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.InvalidateRequired(System.Windows.IDataObject)">
            <summary>
            Checks if the InvalidateRequired drop description flag is set for the associated DataObject.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <returns>True if the InvalidateRequired flag is set, otherwise False.</returns>
        </member>
        <member name="M:System.Windows.DragSourceHelper.SetDropDescriptionIsDefault(System.Windows.IDataObject,System.Boolean)">
            <summary>
            Sets the IsDefault drop description flag for the associated DataObject.
            </summary>
            <param name="dataObject">The associdated DataObject.</param>
            <param name="isDefault">True to set the flag, False to unset it.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.SetInvalidateRequired(System.Windows.IDataObject,System.Boolean)">
            <summary>
            Sets the InvalidatedRequired drop description flag for the associated DataObject.
            </summary>
            <param name="dataObject">The associdated DataObject.</param>
            <param name="isDefault">True to set the flag, False to unset it.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.SetDropDescriptionFlag(System.Windows.IDataObject,System.Windows.DragSourceHelper.DropDescriptionFlags)">
            <summary>
            Sets a drop description flag.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <param name="flag">The drop description flag to set.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.UnsetDropDescriptionFlag(System.Windows.IDataObject,System.Windows.DragSourceHelper.DropDescriptionFlags)">
            <summary>
            Unsets a drop description flag.
            </summary>
            <param name="dataObject">The associated DataObject.</param>
            <param name="flag">The drop description flag to unset.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.GetDropImageType(System.Windows.IDataObject)">
            <summary>
            Gets the current DropDescription's drop image type.
            </summary>
            <param name="dataObject">The DataObject.</param>
            <returns>The current drop image type.</returns>
        </member>
        <member name="T:System.Windows.DragSourceHelper.DropDescriptionFlags">
            <summary>
            Internally used to track information about the current drop description.
            </summary>
        </member>
        <member name="T:System.Windows.DragSourceHelper.DragSourceEntry">
            <summary>
            Represents a drag source context entry.
            </summary>
        </member>
        <member name="T:System.Windows.DragSourceHelper.AdviseSink">
            <summary>
            Provides an advisory sink for the COM IDataObject implementation.
            </summary>
        </member>
        <member name="M:System.Windows.DragSourceHelper.AdviseSink.#ctor(System.Windows.IDataObject)">
            <summary>
            Creates an AdviseSink associated to the specified data object.
            </summary>
            <param name="data">The data object.</param>
        </member>
        <member name="M:System.Windows.DragSourceHelper.AdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Handles DataChanged events from a COM IDataObject.
            </summary>
            <param name="format">The data format that had a change.</param>
            <param name="stgmedium">The data value.</param>
        </member>
    </members>
</doc>
