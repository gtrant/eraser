<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="The program does not have the required permissions to erase the unused space on disk. Run the program as an administrator and retry the operation." xml:space="preserve">
    <value>The program does not have the required permissions to erase the unused space on disk. Run the program as an administrator and retry the operation.</value>
  </data>
  <data name="The program does not have the required permissions to erase the unused space on disk." xml:space="preserve">
    <value>The program does not have the required permissions to erase the unused space on disk.</value>
  </data>
  <data name="The drive {0} has System Restore or Volume Shadow Copies enabled. This may allow copies of files stored on the disk to be recovered and pose a security concern." xml:space="preserve">
    <value>The drive {0} has System Restore or Volume Shadow Copies enabled. This may allow copies of files stored on the disk to be recovered and pose a security concern.</value>
  </data>
  <data name="The drive {0} has disk quotas active. This will prevent the complete erasure of unused space and may pose a security concern." xml:space="preserve">
    <value>The drive {0} has disk quotas active. This will prevent the complete erasure of unused space and may pose a security concern.</value>
  </data>
  <data name="Searching for files' cluster tips..." xml:space="preserve">
    <value>Searching for files' cluster tips...</value>
  </data>
  <data name="The task was cancelled." xml:space="preserve">
    <value>The task was cancelled.</value>
  </data>
  <data name="Erasing cluster tips..." xml:space="preserve">
    <value>Erasing cluster tips...</value>
  </data>
  <data name="Erasing unused space..." xml:space="preserve">
    <value>Erasing unused space..</value>
  </data>
  <data name="Old resident file system table files" xml:space="preserve">
    <value>Old resident file system table files</value>
  </data>
  <data name="Removing temporary files..." xml:space="preserve">
    <value>Removing temporary files...</value>
  </data>
  <data name="Erasing unused directory structures..." xml:space="preserve">
    <value>Erasing unused directory structures...</value>
  </data>
  <data name="Erasing files..." xml:space="preserve">
    <value>Erasing files...</value>
  </data>
  <data name="The file {0} was not erased as the file does not exist." xml:space="preserve">
    <value>The file {0} was not erased as the file does not exist.</value>
  </data>
  <data name="The file {0} could not be erased because the file was either compressed, encrypted or a sparse file." xml:space="preserve">
    <value>The file {0} could not be erased because the file was either compressed, encrypted or a sparse file.</value>
  </data>
  <data name="The file {0} could not be erased because the file's permissions prevent access to the file." xml:space="preserve">
    <value>The file {0} could not be erased because the file's permissions prevent access to the file.</value>
  </data>
  <data name="(locked by {0})" xml:space="preserve">
    <value>(locked by {0})</value>
  </data>
  <data name="Could not force closure of file \&quot;{0}\&quot; {1}" xml:space="preserve">
    <value>Could not force closure of file \"{0}\" {1}</value>
  </data>
  <data name="Removing folders..." xml:space="preserve">
    <value>Removing folders...</value>
  </data>
  <data name="Emptying recycle bin..." xml:space="preserve">
    <value>Emptying recycle bin...</value>
  </data>
  <data name="EntropySource GUID not found: {0}" xml:space="preserve">
    <value>EntropySource GUID not found: {0}</value>
  </data>
  <data name="Erasure method not found: {0}" xml:space="preserve">
    <value>Erasure method not found: {0}</value>
  </data>
  <data name="PRNG not found: {0}" xml:space="preserve">
    <value>PRNG not found: {0}</value>
  </data>
  <data name="Plausible deniability was selected, but no decoy files were found. The current file has been only replaced with random data." xml:space="preserve">
    <value>Plausible deniability was selected, but no decoy files were found. The current file has been only replaced with random data.</value>
  </data>
  <data name="The file system on the drive {0} is not supported." xml:space="preserve">
    <value>The file system on the drive {0} is not supported.</value>
  </data>
  <data name="{0} (1 pass)" xml:space="preserve">
    <value>{0} (1 pass)</value>
  </data>
  <data name="{0} ({1} passes)" xml:space="preserve">
    <value>{0} ({1} passes)</value>
  </data>
  <data name="Random" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="(default)" xml:space="preserve">
    <value>(default)</value>
  </data>
  <data name="Could not load the plugin {0}.\n\nThe error returned was: {1}" xml:space="preserve">
    <value>Could not load the plugin {0}.\n\nThe error returned was: {1}</value>
  </data>
  <data name="Eraser" xml:space="preserve">
    <value>Eraser</value>
  </data>
  <data name="Running on restart" xml:space="preserve">
    <value>Running on restart</value>
  </data>
  <data name="Once every {0} days" xml:space="preserve">
    <value>Once every {0} days</value>
  </data>
  <data name="Once every day" xml:space="preserve">
    <value>Once every day</value>
  </data>
  <data name="Every weekday" xml:space="preserve">
    <value>Every weekday</value>
  </data>
  <data name="Every Monday, {0}" xml:space="preserve">
    <value>Every Monday, {0}</value>
  </data>
  <data name="Every Tuesday, {0}" xml:space="preserve">
    <value>Every Tuesday, {0}</value>
  </data>
  <data name="Every Wednesday, {0}" xml:space="preserve">
    <value>Every Wednesday, {0}</value>
  </data>
  <data name="Every Thursday, {0}" xml:space="preserve">
    <value>Every Thursday, {0}</value>
  </data>
  <data name="Every Friday, {0}" xml:space="preserve">
    <value>Every Friday, {0}</value>
  </data>
  <data name="Every Saturday, {0}" xml:space="preserve">
    <value>Every Saturday, {0}</value>
  </data>
  <data name="Every Sunday, {0}" xml:space="preserve">
    <value>Every Sunday, {0}</value>
  </data>
  <data name="once every {0} week." xml:space="preserve">
    <value>once every {0} week.</value>
  </data>
  <data name="once every {0} weeks." xml:space="preserve">
    <value>once every {0} weeks.</value>
  </data>
  <data name="On day {0} of every month" xml:space="preserve">
    <value>On day {0} of every month</value>
  </data>
  <data name="On day {0} of every {1} months" xml:space="preserve">
    <value>On day {0} of every {1} months</value>
  </data>
  <data name=", at {0}" xml:space="preserve">
    <value>, at {0}</value>
  </data>
  <data name="The frequency of the recurrence should be greater than one" xml:space="preserve">
    <value>The frequency of the recurrence should be greater than one</value>
  </data>
  <data name="The WeeklySchedule should have at least one day where the task should be run." xml:space="preserve">
    <value>The WeeklySchedule should have at least one day where the task should be run.</value>
  </data>
  <data name="An invalid type was found when loading the task schedule" xml:space="preserve">
    <value>An invalid type was found when loading the task schedule</value>
  </data>
  <data name="{0} and {1} other targets" xml:space="preserve">
    <value>{0} and {1} other targets</value>
  </data>
  <data name="Unused disk space ({0})" xml:space="preserve">
    <value>Unused disk space ({0})</value>
  </data>
  <data name="Could not erase files and subfolders in {0} because {1}" xml:space="preserve">
    <value>Could not erase files and subfolders in {0} because {1}</value>
  </data>
  <data name="Recycle Bin" xml:space="preserve">
    <value>Recycle Bin</value>
  </data>
</root>